name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }} 
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}  
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost" 
          --health-interval=30s 
          --health-timeout=10s 
          --health-retries=5

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Create .env file
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env

      - name: Build and run containers
        run: |
          docker compose up --build -d
          sleep 15 # Espera 15 segundos para que se conecte la BD

      - name: Grant privileges to user
        run: |
          docker exec -i db_mysql_dk mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON *.* TO 'facu'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"
    
      - name: Run migrations and tests
        run: |
          docker compose exec backend python3 manage.py makemigrations --noinput
          docker compose exec backend python3 manage.py migrate --noinput
          docker compose exec backend python3 manage.py test api.tests
          
      - name: Stop and remove containers
        run: docker compose down
