name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3307:3306  # Cambiar el puerto externo a 3307
        volumes:
          - db_data:/var/lib/mysql

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and run backend container
      run: |
        docker compose -f docker-compose.yml up -d
        # Esperar a que MySQL esté listo
        for i in {1..30}; do
          if docker exec db_mysql_dk mysqladmin -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} ping; then
            break
          fi
          echo "Esperando a que MySQL esté disponible..."
          sleep 2
        done

    - name: Grant privileges to user
      run: |
        for i in {1..30}; do
          if docker exec db_mysql_dk mysqladmin -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} ping; then
            break
          fi
          echo "Esperando a que MySQL esté disponible..."
          sleep 2
        done
        docker exec -i db_mysql_dk mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON *.* TO 'facu'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"

    - name: Run tests
      run: |
        docker compose -f docker-compose.yml run backend sh -c "python3 manage.py test api.tests"

    - name: Stop services
      run: docker compose -f docker-compose.yml down
